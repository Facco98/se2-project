
swagger: '2.0'
info:
  version: '1.0'
  title: "nestareas"
  description: A simple way to manage the common areas within NEST - Nuovo Studentato Trento
  license:
    name: MIT
    url: https://github.com/Facco/se2-proj
host: localhost
basePath: /
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /login/{mail}:
    get:
      summary: Login
      description: Authenticates the user.
      parameters:
        - in: path
          name: mail
          required: true
          type: string
          minimum: 1
          description: The mail of the user you want to authenticate.
        - in: query
          name: password
          required: true
          type: string
          minimum: 1
          description: The password of the user you want to authenticate.
      responses:
        200:
          description: A response Object.
          schema:
            type: object
            properties:
              logged:
                type: boolean
                description: The authentication was successfull or not.
              authToken:
                type: string
                description: The authentication token generated by the server.
        409:
          description: A response Object.
          schema:
            type: object
            properties:
              logged:
                type: boolean
                description: The authentication was successfull or not.
              errorDescription:
                type: string
                description: The description of the error occurred.


  /request/:
    get:
      summary: RequestList
      description: lists all pending requests
      responses:
        200:
          description: A response Object.
          schema:
            type: object
            properties:
              valid:
                type: boolean
                description: Tells you if the request was valid or not.
              request:
                type: array
                description: The list of the pending request.
        401:
          description: A response Object.
          schema:
            type: object
            properties:
              logged:
                type: boolean
                description: You aren't .
              errorDescription:
                type: string
                description: The description of the error occurred.
      post:
        summary: CreateRequest
        description: Creating a Request
        parameters:
          - in: body
            name: id_utente
            required: true
            type: string
            minimum: 1
            description: id of user.
          - in: body
            name: id_aula
            required: true
            type: string
            minimum: 1
            description: id of room.
          - in: body
            name: beginnig
            required: true
            type: string
            minimum: 1
            description: beginning of reservation.
          - in: body
            name: lapse
            required: true
            type: string
            minimum: 1
            description: lapse of reservation.
          - in: body
            name: reason
            required: true
            type: string
            minimum: why the user need that room at that time.
        responses:
          200:
            description: A response Object.
            schema:
              type: object
              properties:
                valid:
                  type: boolean
                  description: Tells you if the request was accepted or not.
          401:
            description: A response Object.
            schema:
              type: object
              properties:
                logged:
                  type: boolean
                  description: You aren't .
                errorDescription:
                  type: string
                  description: The description of the error occurred.

  /request/{id}:
  get:
    summary: AccetRequest
    description: lists all pending requests
    parameters:
      - in: path
        name: id
        required: true
        type: integer
        minimum: 1
        description: The mail of the user you want to authenticate.
    responses:
      200:
        description: A response Object.
        schema:
          type: object
          properties:
            valid:
              type: boolean
              description: Tells you if the request was accepted or not.
      401:
        description: A response Object.
        schema:
          type: object
          properties:
            logged:
              type: boolean
              description: You aren't .
            errorDescription:
              type: string
              description: The description of the error occurred.

  /reservation/{id}:
    get:
      summary: View reservation.
      description: View a specific reservation of a room.
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          minimum: 1
          description: The id of the reservation you want to view.
      responses:
        200:
          description: A response Object.
          schema:
            type: object
            properties:
              valid:
                type: boolean
                description: Tells you if you can view the details of the reservation
              motivazione:
                type: string
                description: Tells you the reason why the room was reserved.
              inizio:
                type: string
                description: The beginning of the reservation
              durata:
                type: string
                description: The lapse of the reservation.
        400:
          description: A response Object.
          schema:
            type: object
            properties:
                valid:
                  type: boolean
                  description: Tells you if you can view the details of the reservation.
                error:
                  type: string
                  description: The description of the error occurred.
    delete:
      summary: Delete reservation
      description: Deletes the reservation.
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          minimum: 1
          description: The id of the reservation you want to delete.
      responses:
        200:
          description: A response Object.
          schema:
            type: object
            properties:
              valid:
                type: boolean
                description: Tells you if the reservation was deleted correctly.
        401:
          description: A response Object.
          schema:
            type: object
            properties:
                valid:
                  type: boolean
                  description: Tells you if the request was valid or not.
                error:
                  type: string
                  description: The description of the error occurred.
        404:
          description: A response Object.
          schema:
            type: object
            properties:
              valid:
                type: boolean
                description: Tells you if the request was valid or not.
              errorDescription:
                type: string
                description: The description of the error occurred.

  /reservation/room/{id_aula}:
    get:
      summary: Reserve a room
      description: Reserves a room for a user.
      parameters:
        - in: path
          name: id_aula
          required: true
          type: integer
          minimum: 1
          description: The id of the room you want to reserve.
        - in: query
          name: inizio
          required: true
          type: string
          minimum: 1
          description: The beginning of the reservation
        - in: query
          name: durata
          required: true
          type: string
          minimum: 1
          description: The lapse of the reservation.
      responses:
        200:
          description: A response Object.
          schema:
            type: object
            properties:
              valid:
                type: boolean
                description: Tells you if the room was reserved correctly.
              list:
                type: array
                description: Tells you the reservations currently valid.
        404:
          description: A response Object.
          schema:
            type: object
            properties:
              valid:
                type: boolean
                description: Tells you if the request was valid or not.
              errorDescription:
                type: string
                description: The description of the error occurred.

